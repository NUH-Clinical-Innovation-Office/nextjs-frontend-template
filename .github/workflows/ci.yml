name: CI

on:
  push:
    branches: [main]

env:
  NODE_VERSION: "24.10.0"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build & Test
    uses: ./.github/workflows/reusable-build.yml
    with:
      node_version: "24.10.0"

  docker:
    name: Build & Push Docker Image
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/reusable-docker.yml
    with:
      node_version: "24.10.0"
      platforms: linux/amd64,linux/arm64
    secrets: inherit

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: docker
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate required secrets
        run: |
          MISSING_SECRETS=()

          if [ -z "${{ secrets.KUBECONFIG }}" ]; then
            MISSING_SECRETS+=("KUBECONFIG")
          fi

          if [ ${#MISSING_SECRETS[@]} -gt 0 ]; then
            echo "✗ ERROR: Missing required secrets:"
            printf '  - %s\n' "${MISSING_SECRETS[@]}"
            echo ""
            echo "Please configure these secrets in your repository settings."
            exit 1
          fi

          echo "✓ All required secrets are configured"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: "v3.13.0"

      - name: Setup Kubernetes config
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy with Helm
        run: |
          IMAGE_NAME_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          helm upgrade --install nextjs-app-staging ./helm/nextjs-app \
            -n nextjs-frontend-template-staging \
            --create-namespace \
            -f ./helm/nextjs-app/values-staging.yaml \
            --set image.tag=${{ needs.docker.outputs.image_tag }} \
            --set image.repository=${{ env.REGISTRY }}/${IMAGE_NAME_LOWER} \
            --atomic \
            --wait \
            --timeout 10m

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/nextjs-app -n nextjs-frontend-template-staging --timeout=1m

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [docker, deploy-staging]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate required secrets
        run: |
          MISSING_SECRETS=()

          if [ -z "${{ secrets.KUBECONFIG }}" ]; then
            MISSING_SECRETS+=("KUBECONFIG")
          fi

          if [ ${#MISSING_SECRETS[@]} -gt 0 ]; then
            echo "✗ ERROR: Missing required secrets:"
            printf '  - %s\n' "${MISSING_SECRETS[@]}"
            echo ""
            echo "Please configure these secrets in your repository settings."
            exit 1
          fi

          echo "✓ All required secrets are configured"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: "v3.13.0"

      - name: Setup Kubernetes config
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy with Helm
        run: |
          IMAGE_NAME_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          helm upgrade --install nextjs-app ./helm/nextjs-app \
            -n nextjs-frontend-template \
            --create-namespace \
            -f ./helm/nextjs-app/values-production.yaml \
            --set image.tag=${{ needs.docker.outputs.image_tag }} \
            --set image.repository=${{ env.REGISTRY }}/${IMAGE_NAME_LOWER} \
            --atomic \
            --wait \
            --timeout 10m

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/nextjs-app -n nextjs-frontend-template --timeout=1m
