# Staging environment values
replicaCount: 2

image:
  repository: nextjs-frontend-template
  pullPolicy: IfNotPresent
  tag: "staging"

serviceAccount:
  create: true
  annotations:
    # Required for Vault integration
  name: "nextjs-frontend-template"

# Vault Agent Injector annotations
podAnnotations:
  vault.hashicorp.io/agent-inject: "true"
  vault.hashicorp.io/role: "nextjs-frontend-template"
  vault.hashicorp.io/agent-inject-secret-env: "secret/data/nextjs-frontend-template/staging"
  vault.hashicorp.io/agent-inject-template-env: |
    {{- with secret "secret/data/nextjs-frontend-template/staging" -}}
    export NEXTAUTH_URL="{{ .Data.data.NEXTAUTH_URL }}"
    export NEXTAUTH_SECRET="{{ .Data.data.NEXTAUTH_SECRET }}"
    export DATABASE_URL="{{ .Data.data.DATABASE_URL }}"
    export API_URL="{{ .Data.data.API_URL }}"
    {{- end -}}

env:
  - name: NODE_ENV
    value: "production"
  - name: NEXT_PUBLIC_ENV
    value: "staging"

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 512Mi

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
  hosts:
    - host: staging.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: nextjs-app-staging-tls
      hosts:
        - staging.example.com

autoscaling:
  enabled: false
